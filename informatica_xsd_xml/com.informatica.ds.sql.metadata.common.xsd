<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://com.informatica.ds.sql.metadata.common/0" xmlns:common="http://com.informatica.ds.sql.metadata.common/0" xmlns:constraint="http://com.informatica.metadata.common.constraint/1" xmlns:core="http://com.informatica.metadata.common.core/2" xmlns:imx="http://com.informatica.imx" xmlns:mapping="http://com.informatica.metadata.common.mapping/2" xmlns:typelibrary="http://com.informatica.metadata.common.typesystem.typelibrary/2" xmlns:types="http://com.informatica.metadata.common.types/2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://com.informatica.ds.sql.metadata.common/0">
<xsd:import namespace="http://com.informatica.metadata.common.core/2" schemaLocation="com.informatica.metadata.common.core.xsd"/>
<xsd:import namespace="http://com.informatica.metadata.common.mapping/2" schemaLocation="com.informatica.metadata.common.mapping.xsd"/>
<xsd:import namespace="http://com.informatica.metadata.common.types/2" schemaLocation="com.informatica.metadata.common.types.xsd"/>
<xsd:import namespace="http://com.informatica.metadata.common.typesystem.typelibrary/2" schemaLocation="com.informatica.metadata.common.typesystem.typelibrary.xsd"/>
<xsd:import namespace="http://com.informatica.metadata.common.constraint/1" schemaLocation="com.informatica.metadata.common.constraint.xsd"/>
<xsd:import namespace="http://com.informatica.imx" schemaLocation="IMX.xsd"/>
<xsd:complexType name="ForeignKey">
<xsd:complexContent>
<xsd:extension base="core:NamedElement">
<xsd:annotation>
<xsd:documentation> ForeignKey constraint objects identify ordered subsets of a Table's Columns, where each row's set
 of values represents a reference to the unique key of a row in some other (or possibly the same)
 table. Tables constrain their collection of abstract KeyReferences to only include relational
 ForeignKey constraint objects. ForeignKey constraint objects are valid only when their inheritted
 collection of Field references include only Column references.
 
 @author Andy Lai
</xsd:documentation>
</xsd:annotation>
<xsd:attribute name="columns" type="imx:idrefs"/>
<xsd:attribute name="key" type="imx:idref"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="ForeignKey" type="common:ForeignKey"/>
<xsd:complexType name="PrimaryKey">
<xsd:complexContent>
<xsd:extension base="core:NamedElement">
<xsd:annotation>
<xsd:documentation> A PrimaryKey constraint object is a UniqueKey constraint object with the special designation of
 being the preferred ordered column subset for identifying unique rows. Tables define a
 relationship to at most one PrimaryKey constraint object that is a subset of their relationship
 to 0 or more UniqueKey constraints.
 
 @author Andy Lai
</xsd:documentation>
</xsd:annotation>
<xsd:attribute name="columns" type="imx:idrefs"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="PrimaryKey" type="common:PrimaryKey"/>
<xsd:complexType name="SQLEndpoint">
<xsd:complexContent>
<xsd:extension base="core:NamedElement">
<xsd:annotation>
<xsd:documentation> This is the model of a SQL endpoint which contains a list of virtual schema.
 
 @author Andy Lai

 elee 10/3/2014   version 0.2.1   Deprecated property virtualTableMappings.  Consumers should use property virtualTableMappings in VirtualTable model instead.
 
</xsd:documentation>
</xsd:annotation>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="schemas">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="VirtualSchema" type="common:VirtualSchema"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="virtualTableMappings">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="Mapping" type="mapping:Mapping"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:choice>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="SQLEndpoint" type="common:SQLEndpoint"/>
<xsd:complexType name="StoredProcedureCharacteristic">
<xsd:complexContent>
<xsd:extension base="mapping:Characteristic">
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="sqlInputParameters">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="StructuralFeature" type="typelibrary:StructuralFeature"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="sqlOutputParameters">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="StructuralFeature" type="typelibrary:StructuralFeature"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:choice>
<xsd:attribute name="inputType" type="imx:idref"/>
<xsd:attribute name="outputType" type="imx:idref"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="StoredProcedureCharacteristic" type="common:StoredProcedureCharacteristic"/>
<xsd:complexType name="VirtualSchema">
<xsd:complexContent>
<xsd:extension base="core:NamedElement">
<xsd:annotation>
<xsd:documentation> This is the model of a virtual schema which contains a list of virtual tables, and a list of
 stored procedures.
 
 @author Andy Lai
</xsd:documentation>
</xsd:annotation>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="storedProcedures">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="Mapping" type="mapping:Mapping"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="tables">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="VirtualTable" type="common:VirtualTable"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:choice>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="VirtualSchema" type="common:VirtualSchema"/>
<xsd:complexType name="VirtualTable">
<xsd:complexContent>
<xsd:extension base="core:NamedElement">
<xsd:annotation>
<xsd:documentation> VirtualTableMap for Data Object Caching purpose.
 - contains virtual table and canonical data object/maps

 @author Raymond To
</xsd:documentation>
</xsd:annotation>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="virtualTableMappings">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="Mapping" type="mapping:Mapping"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="columns">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="Column" type="common:Column"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="foreignKeys">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="ForeignKey" type="common:ForeignKey"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="primaryKey" type="common:PrimaryKey"/>
<xsd:element name="sourceConstraints">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="SourceConstraint" type="constraint:SourceConstraint"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:choice>
<xsd:attribute name="generated" type="xsd:boolean"/>
<xsd:attribute name="readMappings" type="imx:idrefs"/>
<xsd:attribute name="writeMappings" type="imx:idrefs"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="VirtualTable" type="common:VirtualTable"/>
<xsd:complexType name="Column">
<xsd:complexContent>
<xsd:extension base="types:TypedElement">
<xsd:annotation>
<xsd:documentation> A Column represents one value position in each row of a table or view. Columns must reference a
 DataType to validly satisfy the type relationship inherited from TypedElement. Columns classify
 data values that are described by the its data type or are the null value.
 
 Columns qualify their associated DataType via precision and scale attributes that are interpreted
 according to the StorageSemantic defined by the referenced DataType.
 
 Null values are permitted only when the null-able attribute is false.
 
 When inserting a row to a table, each of its columns either defines a default value that can used
 in lieu of an explicitly provided value or requires an explicit value.
 
 @author Andy Lai
</xsd:documentation>
</xsd:annotation>
<xsd:choice maxOccurs="unbounded" minOccurs="0">
<xsd:element name="defaultValue" type="types:Value"/>
</xsd:choice>
<xsd:attribute name="nullable" type="xsd:boolean"/>
<xsd:attribute name="precision" type="xsd:int"/>
<xsd:attribute name="primaryKeyReference" type="imx:idref"/>
<xsd:attribute name="scale" type="xsd:int"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:element name="Column" type="common:Column"/>
</xsd:schema>
