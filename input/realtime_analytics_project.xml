<?xml version="1.0" encoding="UTF-8"?>
<project name="RealtimeAnalytics_Platform" version="4.0" 
         xmlns="http://www.informatica.com/BDM/Project/10.2"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:imx="http://www.informatica.com/imx"
         xmlns:streaming="http://www.informatica.com/streaming"
         xsi:schemaLocation="http://www.informatica.com/BDM/Project/10.2 project.xsd">
  
  <description>Real-Time Analytics Platform - IoT, Streaming, and ML Pipeline</description>
  
  <folders>
    <folder name="Mappings" type="MappingFolder">
      
      <!-- IoT Data Ingestion and Processing -->
      <mapping name="IoT_Stream_Processing" id="MAP_IOT_001" streaming:mode="STRUCTURED_STREAMING">
        <description>Real-time IoT sensor data processing with anomaly detection</description>
        <components>
          <source name="IOT_SENSOR_STREAM" type="Kafka" id="SRC_KAFKA_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="iot_sensors"/>
              <property name="consumer_group" value="iot_processing"/>
              <property name="offset_reset" value="latest"/>
              <property name="format" value="JSON"/>
              <property name="schema_registry_url" value="http://schema-registry:8081"/>
              <property name="streaming_mode" value="APPEND"/>
            </properties>
          </source>
          
          <transformation name="PARSE_IOT_JSON" type="Expression" id="TXN_PARSE_001">
            <properties>
              <property name="expressions">
                <expression name="device_id" value="get_json_object(value, '$.device_id')"/>
                <expression name="timestamp_parsed" value="from_unixtime(cast(get_json_object(value, '$.timestamp') as bigint))"/>
                <expression name="temperature" value="cast(get_json_object(value, '$.temperature') as double)"/>
                <expression name="humidity" value="cast(get_json_object(value, '$.humidity') as double)"/>
                <expression name="pressure" value="cast(get_json_object(value, '$.pressure') as double)"/>
                <expression name="location_lat" value="cast(get_json_object(value, '$.location.latitude') as double)"/>
                <expression name="location_lon" value="cast(get_json_object(value, '$.location.longitude') as double)"/>
                <expression name="battery_level" value="cast(get_json_object(value, '$.battery_level') as double)"/>
                <expression name="signal_strength" value="cast(get_json_object(value, '$.signal_strength') as int)"/>
              </property>
              <property name="filters">
                <filter name="valid_sensors" value="device_id IS NOT NULL AND temperature IS NOT NULL"/>
              </property>
            </properties>
          </transformation>
          
          <transformation name="ENRICH_WITH_DEVICE_META" type="Lookup" id="TXN_LOOKUP_DEVICE_001">
            <properties>
              <property name="lookup_table" value="DEVICE_METADATA"/>
              <property name="join_conditions">
                <condition value="PARSE_IOT_JSON.device_id = DEVICE_METADATA.device_id"/>
              </property>
              <property name="join_type" value="INNER"/>
              <property name="lookup_cache" value="STREAMING"/>
              <property name="watermark" value="10 minutes"/>
            </properties>
          </transformation>
          
          <transformation name="ANOMALY_DETECTION" type="Java" id="TXN_ML_001">
            <properties>
              <property name="java_class" value="com.analytics.ml.AnomalyDetector"/>
              <property name="logic_type" value="ml_anomaly_detection"/>
              <property name="model_path" value="/models/iot_anomaly_model.pkl"/>
              <property name="features" value="temperature,humidity,pressure,battery_level"/>
              <property name="anomaly_threshold" value="0.95"/>
              <property name="window_duration" value="5 minutes"/>
              <property name="slide_interval" value="1 minute"/>
            </properties>
          </transformation>
          
          <transformation name="REAL_TIME_AGGREGATIONS" type="Aggregator" id="TXN_AGG_RT_001">
            <properties>
              <property name="window_type" value="TUMBLING"/>
              <property name="window_duration" value="1 minute"/>
              <property name="watermark_delay" value="30 seconds"/>
              <property name="group_by">
                <column name="device_type"/>
                <column name="location_zone"/>
                <column name="window"/>
              </property>
              <property name="aggregations">
                <aggregation name="avg_temperature" type="AVG" column="temperature"/>
                <aggregation name="max_temperature" type="MAX" column="temperature"/>
                <aggregation name="min_temperature" type="MIN" column="temperature"/>
                <aggregation name="avg_humidity" type="AVG" column="humidity"/>
                <aggregation name="sensor_count" type="COUNT" column="device_id"/>
                <aggregation name="anomaly_count" type="COUNT" column="device_id" filter="is_anomaly = true"/>
                <aggregation name="low_battery_count" type="COUNT" column="device_id" filter="battery_level &lt; 20"/>
              </property>
            </properties>
          </transformation>
          
          <target name="REAL_TIME_METRICS" type="Kafka" id="TGT_KAFKA_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="iot_metrics"/>
              <property name="format" value="JSON"/>
              <property name="output_mode" value="APPEND"/>
              <property name="checkpoint_location" value="s3://checkpoints/iot_metrics/"/>
            </properties>
          </target>
          
          <target name="IOT_DATA_LAKE" type="HDFS" id="TGT_HDFS_001">
            <properties>
              <property name="path" value="s3://datalake/iot_data/year=${year}/month=${month}/day=${day}/"/>
              <property name="format" value="DELTA"/>
              <property name="partition_by" value="year,month,day,device_type"/>
              <property name="output_mode" value="APPEND"/>
              <property name="checkpoint_location" value="s3://checkpoints/iot_datalake/"/>
              <property name="trigger" value="10 minutes"/>
            </properties>
          </target>
        </components>
      </mapping>
      
      <!-- User Behavior Analytics -->
      <mapping name="User_Behavior_Stream" id="MAP_USER_001" streaming:mode="STRUCTURED_STREAMING">
        <description>Real-time user behavior analytics and personalization</description>
        <components>
          <source name="CLICKSTREAM_EVENTS" type="Kafka" id="SRC_CLICKS_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="user_events"/>
              <property name="consumer_group" value="behavior_analytics"/>
              <property name="format" value="AVRO"/>
              <property name="schema_registry_url" value="http://schema-registry:8081"/>
            </properties>
          </source>
          
          <source name="USER_PROFILES" type="HDFS" id="SRC_PROFILES_001">
            <properties>
              <property name="path" value="s3://profiles/user_profiles.delta"/>
              <property name="format" value="DELTA"/>
              <property name="streaming_read" value="true"/>
            </properties>
          </source>
          
          <transformation name="SESSION_WINDOW_ANALYTICS" type="Aggregator" id="TXN_SESSION_001">
            <properties>
              <property name="window_type" value="SESSION"/>
              <property name="session_timeout" value="30 minutes"/>
              <property name="watermark_delay" value="1 minute"/>
              <property name="group_by">
                <column name="user_id"/>
                <column name="session_id"/>
              </property>
              <property name="aggregations">
                <aggregation name="session_duration" type="MAX" column="event_time" expression="unix_timestamp(max(event_time)) - unix_timestamp(min(event_time))"/>
                <aggregation name="page_views" type="COUNT" column="event_id" filter="event_type = 'page_view'"/>
                <aggregation name="clicks" type="COUNT" column="event_id" filter="event_type = 'click'"/>
                <aggregation name="purchases" type="COUNT" column="event_id" filter="event_type = 'purchase'"/>
                <aggregation name="total_revenue" type="SUM" column="revenue"/>
                <aggregation name="unique_products" type="COUNT_DISTINCT" column="product_id"/>
                <aggregation name="bounce_rate" type="CUSTOM" expression="CASE WHEN count(*) = 1 THEN 1 ELSE 0 END"/>
              </property>
            </properties>
          </transformation>
          
          <transformation name="REAL_TIME_PERSONALIZATION" type="Java" id="TXN_ML_PERSON_001">
            <properties>
              <property name="java_class" value="com.analytics.ml.PersonalizationEngine"/>
              <property name="logic_type" value="ml_recommendation"/>
              <property name="model_type" value="COLLABORATIVE_FILTERING"/>
              <property name="model_path" value="/models/user_recommendation_model.pkl"/>
              <property name="similarity_threshold" value="0.7"/>
              <property name="max_recommendations" value="10"/>
              <property name="real_time_features" value="recent_views,current_session_behavior,time_of_day"/>
            </properties>
          </transformation>
          
          <transformation name="SENTIMENT_ANALYSIS" type="Expression" id="TXN_SENTIMENT_001">
            <properties>
              <property name="expressions">
                <expression name="review_sentiment" value="ml_sentiment(review_text, '/models/sentiment_model')"/>
                <expression name="sentiment_score" value="CASE WHEN review_sentiment = 'positive' THEN 1 WHEN review_sentiment = 'negative' THEN -1 ELSE 0 END"/>
                <expression name="engagement_score" value="(clicks * 2 + page_views * 1 + purchases * 10) / session_duration"/>
                <expression name="user_segment" value="CASE WHEN total_revenue &gt; 1000 THEN 'premium' WHEN total_revenue &gt; 100 THEN 'regular' ELSE 'new' END"/>
              </property>
            </properties>
          </transformation>
          
          <target name="USER_BEHAVIOR_STREAM" type="Kafka" id="TGT_BEHAVIOR_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="user_insights"/>
              <property name="format" value="JSON"/>
              <property name="output_mode" value="UPDATE"/>
            </properties>
          </target>
          
          <target name="PERSONALIZATION_CACHE" type="Redis" id="TGT_REDIS_001">
            <properties>
              <property name="host" value="redis-cluster.analytics.com"/>
              <property name="port" value="6379"/>
              <property name="key_template" value="user_recommendations:${user_id}"/>
              <property name="ttl" value="3600"/>  <!-- 1 hour -->
              <property name="output_mode" value="UPDATE"/>
            </properties>
          </target>
        </components>
      </mapping>
      
      <!-- Fraud Detection Pipeline -->
      <mapping name="Fraud_Detection_Pipeline" id="MAP_FRAUD_001" streaming:mode="STRUCTURED_STREAMING">
        <description>Real-time fraud detection with ML models</description>
        <components>
          <source name="TRANSACTION_STREAM" type="Kafka" id="SRC_TXN_STREAM_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="financial_transactions"/>
              <property name="consumer_group" value="fraud_detection"/>
              <property name="format" value="JSON"/>
              <property name="startingOffsets" value="earliest"/>
            </properties>
          </source>
          
          <transformation name="FEATURE_ENGINEERING" type="Expression" id="TXN_FEATURES_001">
            <properties>
              <property name="expressions">
                <expression name="transaction_hour" value="hour(from_utc_timestamp(from_unixtime(timestamp), 'UTC'))"/>
                <expression name="is_weekend" value="CASE WHEN dayofweek(from_unixtime(timestamp)) IN (1,7) THEN 1 ELSE 0 END"/>
                <expression name="amount_z_score" value="(amount - avg(amount) OVER (PARTITION BY user_id RANGE BETWEEN INTERVAL 30 DAYS PRECEDING AND CURRENT ROW)) / stddev(amount) OVER (PARTITION BY user_id RANGE BETWEEN INTERVAL 30 DAYS PRECEDING AND CURRENT ROW)"/>
                <expression name="velocity_1h" value="count(*) OVER (PARTITION BY user_id RANGE BETWEEN INTERVAL 1 HOUR PRECEDING AND CURRENT ROW)"/>
                <expression name="velocity_24h" value="count(*) OVER (PARTITION BY user_id RANGE BETWEEN INTERVAL 24 HOURS PRECEDING AND CURRENT ROW)"/>
                <expression name="merchant_risk_score" value="coalesce(merchant_risk_lookup.risk_score, 0.5)"/>
              </property>
            </properties>
          </transformation>
          
          <transformation name="ML_FRAUD_SCORING" type="Java" id="TXN_ML_FRAUD_001">
            <properties>
              <property name="java_class" value="com.analytics.ml.FraudDetectionModel"/>
              <property name="logic_type" value="ml_fraud_detection"/>
              <property name="model_type" value="GRADIENT_BOOSTING"/>
              <property name="model_path" value="/models/fraud_detection_gbm.pkl"/>
              <property name="features" value="amount,transaction_hour,is_weekend,amount_z_score,velocity_1h,velocity_24h,merchant_risk_score"/>
              <property name="fraud_threshold" value="0.8"/>
              <property name="ensemble_models" value="/models/fraud_rf.pkl,/models/fraud_neural.pkl"/>
              <property name="real_time_scoring" value="true"/>
            </properties>
          </transformation>
          
          <transformation name="COMPLEX_EVENT_PROCESSING" type="Aggregator" id="TXN_CEP_001">
            <properties>
              <property name="window_type" value="SLIDING"/>
              <property name="window_duration" value="10 minutes"/>
              <property name="slide_duration" value="1 minute"/>
              <property name="group_by">
                <column name="user_id"/>
                <column name="merchant_category"/>
              </property>
              <property name="complex_patterns">
                <pattern name="rapid_succession" value="count(*) &gt; 5 AND max(amount) &gt; 1000"/>
                <pattern name="geographic_anomaly" value="count(DISTINCT location) &gt; 3"/>
                <pattern name="amount_escalation" value="max(amount) / min(amount) &gt; 10"/>
              </property>
            </properties>
          </transformation>
          
          <transformation name="RISK_SCORING" type="Expression" id="TXN_RISK_001">
            <properties>
              <property name="expressions">
                <expression name="combined_fraud_score" value="(ml_fraud_score * 0.6 + rule_based_score * 0.4)"/>
                <expression name="risk_level" value="CASE WHEN combined_fraud_score &gt;= 0.9 THEN 'HIGH' WHEN combined_fraud_score &gt;= 0.7 THEN 'MEDIUM' WHEN combined_fraud_score &gt;= 0.3 THEN 'LOW' ELSE 'MINIMAL' END"/>
                <expression name="action_required" value="CASE WHEN risk_level = 'HIGH' THEN 'BLOCK_TRANSACTION' WHEN risk_level = 'MEDIUM' THEN 'MANUAL_REVIEW' ELSE 'ALLOW' END"/>
                <expression name="confidence_level" value="1.0 - abs(combined_fraud_score - 0.5) * 2"/>
              </property>
            </properties>
          </transformation>
          
          <target name="FRAUD_ALERTS" type="Kafka" id="TGT_ALERTS_001">
            <properties>
              <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
              <property name="topic" value="fraud_alerts"/>
              <property name="format" value="JSON"/>
              <property name="output_mode" value="APPEND"/>
              <property name="trigger" value="5 seconds"/>
            </properties>
          </target>
          
          <target name="TRANSACTION_SCORES" type="ElasticSearch" id="TGT_ES_001">
            <properties>
              <property name="hosts" value="elasticsearch1:9200,elasticsearch2:9200"/>
              <property name="index" value="transaction_scores"/>
              <property name="doc_type" value="_doc"/>
              <property name="output_mode" value="APPEND"/>
            </properties>
          </target>
        </components>
      </mapping>
    </folder>
    
    <folder name="Workflows" type="WorkflowFolder">
      <workflow name="Real_Time_Analytics_Pipeline" id="WF_RT_001" streaming:execution="CONTINUOUS">
        <description>Continuous real-time analytics pipeline</description>
        <tasks>
          <task name="Start_IoT_Processing" type="Mapping" mapping="IoT_Stream_Processing" id="TASK_IOT_001">
            <properties>
              <property name="execution_mode" value="STREAMING"/>
              <property name="checkpoint_interval" value="10 seconds"/>
              <property name="restart_policy" value="ALWAYS"/>
              <property name="max_restarts" value="10"/>
            </properties>
          </task>
          
          <task name="Start_User_Behavior" type="Mapping" mapping="User_Behavior_Stream" id="TASK_USER_001">
            <properties>
              <property name="execution_mode" value="STREAMING"/>
              <property name="checkpoint_interval" value="5 seconds"/>
              <property name="restart_policy" value="ALWAYS"/>
              <property name="parallelism" value="8"/>
            </properties>
          </task>
          
          <task name="Start_Fraud_Detection" type="Mapping" mapping="Fraud_Detection_Pipeline" id="TASK_FRAUD_001">
            <properties>
              <property name="execution_mode" value="STREAMING"/>
              <property name="checkpoint_interval" value="1 second"/>  <!-- Critical for fraud -->
              <property name="restart_policy" value="ALWAYS"/>
              <property name="priority" value="HIGH"/>
            </properties>
          </task>
          
          <task name="Monitor_Stream_Health" type="Command" id="TASK_MONITOR_001">
            <properties>
              <property name="command" value="python /scripts/stream_health_monitor.py"/>
              <property name="schedule" value="*/1 * * * *"/>  <!-- Every minute -->
              <property name="timeout" value="30"/>
            </properties>
          </task>
          
          <task name="ML_Model_Refresh" type="Command" id="TASK_ML_REFRESH_001">
            <properties>
              <property name="command" value="python /scripts/refresh_ml_models.py"/>
              <property name="schedule" value="0 2 * * *"/>  <!-- Daily at 2 AM -->
              <property name="timeout" value="3600"/>
            </properties>
          </task>
        </tasks>
        
        <!-- Parallel execution for streaming tasks -->
        <links>
          <link from="Start_IoT_Processing" to="Monitor_Stream_Health" condition="STARTED" type="PARALLEL"/>
          <link from="Start_User_Behavior" to="Monitor_Stream_Health" condition="STARTED" type="PARALLEL"/>
          <link from="Start_Fraud_Detection" to="Monitor_Stream_Health" condition="STARTED" type="PARALLEL"/>
        </links>
      </workflow>
    </folder>
  </folders>
  
  <!-- Advanced Streaming Connections -->
  <connections>
    <connection name="KAFKA_CLUSTER" type="Kafka" id="CONN_KAFKA_001">
      <properties>
        <property name="bootstrap_servers" value="kafka1:9092,kafka2:9092,kafka3:9092"/>
        <property name="security_protocol" value="SASL_SSL"/>
        <property name="sasl_mechanism" value="PLAIN"/>
        <property name="sasl_username" value="${KAFKA_USER}"/>
        <property name="sasl_password" value="${KAFKA_PASSWORD}"/>
        <property name="ssl_truststore_location" value="/security/kafka.client.truststore.jks"/>
        <property name="schema_registry_url" value="http://schema-registry:8081"/>
      </properties>
    </connection>
    
    <connection name="DELTA_LAKE_S3" type="HDFS" id="CONN_DELTA_001">
      <properties>
        <property name="fs_defaultFS" value="s3://analytics-datalake/"/>
        <property name="fs_s3a_access_key" value="${AWS_ACCESS_KEY}"/>
        <property name="fs_s3a_secret_key" value="${AWS_SECRET_KEY}"/>
        <property name="fs_s3a_endpoint" value="s3.amazonaws.com"/>
        <property name="delta_table_format" value="true"/>
        <property name="enable_delta_optimizations" value="true"/>
      </properties>
    </connection>
    
    <connection name="REDIS_CACHE" type="Redis" id="CONN_REDIS_001">
      <properties>
        <property name="host" value="redis-cluster.analytics.com"/>
        <property name="port" value="6379"/>
        <property name="cluster_mode" value="true"/>
        <property name="password" value="${REDIS_PASSWORD}"/>
        <property name="ssl_enabled" value="true"/>
        <property name="connection_pool_size" value="20"/>
      </properties>
    </connection>
    
    <connection name="ELASTICSEARCH_CLUSTER" type="ElasticSearch" id="CONN_ES_001">
      <properties>
        <property name="hosts" value="https://elasticsearch1:9200,https://elasticsearch2:9200"/>
        <property name="username" value="${ES_USER}"/>
        <property name="password" value="${ES_PASSWORD}"/>
        <property name="ssl_enabled" value="true"/>
        <property name="index_template" value="analytics-*"/>
      </properties>
    </connection>
  </connections>
  
  <!-- Real-time Parameters -->
  <parameters>
    <parameter name="STREAM_PROCESSING_TIME" value="$$StreamingTime" type="Timestamp"/>
    <parameter name="WATERMARK_DELAY" value="30 seconds" type="Interval"/>
    <parameter name="CHECKPOINT_INTERVAL" value="10 seconds" type="Interval"/>
    <parameter name="BATCH_INTERVAL" value="1 second" type="Interval"/>
    <parameter name="MAX_RECORDS_PER_TRIGGER" value="10000" type="Integer"/>
    <parameter name="PARALLELISM_LEVEL" value="16" type="Integer"/>
    <parameter name="ML_MODEL_REFRESH_INTERVAL" value="24 hours" type="Interval"/>
    <parameter name="FRAUD_THRESHOLD" value="0.8" type="Decimal"/>
    <parameter name="ANOMALY_DETECTION_WINDOW" value="5 minutes" type="Interval"/>
    <parameter name="SESSION_TIMEOUT" value="30 minutes" type="Interval"/>
    <parameter name="CACHE_TTL" value="1 hour" type="Interval"/>
  </parameters>
  
</project> 